name: Build and release sectionctl binaries

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, for example v1.0, v10.15.10

jobs:
  release:
    name: ðŸŽ¬ Create the release
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false

  build:
    name: ðŸš§ Build binaries
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        GOOS: [ linux, darwin, windows ]
    env:
      VERSION: ${{ github.ref }}
      GOARCH: amd64
      GOOS: ${{ matrix.GOOS }}
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Get version from tag ref
      id: get_version_from_tag
      run: echo ::set-env name=VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Build
      run: make build

    - uses: actions/upload-artifact@v2
      with:
        name: sectionctl-${{ env.VERSION }}-${{ env.GOOS }}-${{ env.GOARCH }}.tar.gz
        path: dist/sectionctl-${{ env.VERSION }}-${{ env.GOOS }}-${{ env.GOARCH }}

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.steps.create_release.outputs.upload_url }}
        asset_path: dist/sectionctl-${{ env.VERSION }}-${{ env.GOOS }}-${{ env.GOARCH }}.tar.gz
        asset_name: sectionctl-${{ env.VERSION }}-${{ env.GOOS }}-${{ env.GOARCH }}.tar.gz
        asset_content_type: application/gzip
